// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace emma_patterson.specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class BrowsingTheWebsiteFeature : Xunit.IUseFixture<BrowsingTheWebsiteFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Browsing.feature"
#line hidden
        
        public BrowsingTheWebsiteFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Browsing the website", "Ensure the site loads and the navigation links work as expected", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(BrowsingTheWebsiteFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Browsing the website")]
        [Xunit.TraitAttribute("Description", "Check that the site Loads")]
        public virtual void CheckThatTheSiteLoads()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check that the site Loads", ((string[])(null)));
#line 4
 this.ScenarioSetup(scenarioInfo);
#line 5
  testRunner.Given("I have browsed to the site \'http://emma-patterson.co.uk\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
  testRunner.Then("I should see the site homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.Extensions.TheoryAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Browsing the website")]
        [Xunit.TraitAttribute("Description", "Check that the navigation links work correctly")]
        [Xunit.Extensions.InlineDataAttribute("Home", "Dear Parents/Carers,", new string[0])]
        [Xunit.Extensions.InlineDataAttribute("EYFS", "Early Years Foundation Stage (Revised 2012)", new string[0])]
        [Xunit.Extensions.InlineDataAttribute("Policies", "Policies", new string[0])]
        [Xunit.Extensions.InlineDataAttribute("Times/Fees", "Times and Fees", new string[0])]
        [Xunit.Extensions.InlineDataAttribute("Misc.", "Miscellaneous Information", new string[0])]
        [Xunit.Extensions.InlineDataAttribute("Gallery", "Our Gallery", new string[0])]
        [Xunit.Extensions.InlineDataAttribute("Contacts", "Contact Details", new string[0])]
        public virtual void CheckThatTheNavigationLinksWorkCorrectly(string page, string titleText, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check that the navigation links work correctly", exampleTags);
#line 8
 this.ScenarioSetup(scenarioInfo);
#line 9
  testRunner.Given("I have browsed to the site \'http://emma-patterson.co.uk\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
  testRunner.When(string.Format("I click the \'{0}\' Navigation Link", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
  testRunner.Then(string.Format("the text \'{0}\' should be displayed in the page title", titleText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                BrowsingTheWebsiteFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                BrowsingTheWebsiteFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
